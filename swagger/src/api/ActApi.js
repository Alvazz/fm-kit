/**
 * Flashmoov
 * Flashmoov
 *
 * OpenAPI spec version: 2.0.0
 * Contact: tech@flashmoov.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/FlashmoovAPIResponse', 'model/LikeBodyRequest', 'model/ShareBodyRequest'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/FlashmoovAPIResponse'), require('../model/LikeBodyRequest'), require('../model/ShareBodyRequest'));
  } else {
    // Browser globals (root is window)
    if (!root.Flashmoov) {
      root.Flashmoov = {};
    }
    root.Flashmoov.ActApi = factory(root.Flashmoov.ApiClient, root.Flashmoov.FlashmoovAPIResponse, root.Flashmoov.LikeBodyRequest, root.Flashmoov.ShareBodyRequest);
  }
}(this, function(ApiClient, FlashmoovAPIResponse, LikeBodyRequest, ShareBodyRequest) {
  'use strict';

  /**
   * Act service.
   * @module api/ActApi
   * @version 2.0.0
   */

  /**
   * Constructs a new ActApi. 
   * @alias module:api/ActApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the flashLike operation.
     * @callback module:api/ActApi~flashLikeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FlashmoovAPIResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Share the flash
     * Share the flash
     * @param {module:model/LikeBodyRequest} flashLikeBody more book information
     * @param {module:api/ActApi~flashLikeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FlashmoovAPIResponse}
     */
    this.flashLike = function(flashLikeBody, callback) {
      var postBody = flashLikeBody;

      // verify the required parameter 'flashLikeBody' is set
      if (flashLikeBody === undefined || flashLikeBody === null) {
        throw new Error("Missing the required parameter 'flashLikeBody' when calling flashLike");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['JWT'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = FlashmoovAPIResponse;

      return this.apiClient.callApi(
        '/flash/like', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the flashShare operation.
     * @callback module:api/ActApi~flashShareCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FlashmoovAPIResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Share the flash
     * Share the flash
     * @param {module:model/ShareBodyRequest} flashShareBody more book information
     * @param {module:api/ActApi~flashShareCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FlashmoovAPIResponse}
     */
    this.flashShare = function(flashShareBody, callback) {
      var postBody = flashShareBody;

      // verify the required parameter 'flashShareBody' is set
      if (flashShareBody === undefined || flashShareBody === null) {
        throw new Error("Missing the required parameter 'flashShareBody' when calling flashShare");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['JWT'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = FlashmoovAPIResponse;

      return this.apiClient.callApi(
        '/flash/share', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
